buildscript {
    ext {
        kotlinVersion = '1.2.30'
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

allprojects {
    group = 'com.github.akraskovski'
    version = '0.0.1-SNAPSHOT'

    configurations {
        ktlint
    }

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-web')
        implementation('org.springframework.boot:spring-boot-starter-security')
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        testImplementation('org.springframework.boot:spring-boot-starter-test')

        ktlint "com.github.shyiko:ktlint:0.29.0"
    }
}

subprojects {
    sourceCompatibility = 1.8
}

sourceCompatibility = 1.8

dependencies {
    implementation project(':core')
    implementation('org.springframework.boot:spring-boot-configuration-processor')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springBootVersion}")
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    testImplementation('org.springframework.security:spring-security-test')
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    classpath = configurations.ktlint
    main = "com.github.akraskovski.fes.FreightExchangeSystemApplication"
    args "-F", "src/**/*.kt"
}
